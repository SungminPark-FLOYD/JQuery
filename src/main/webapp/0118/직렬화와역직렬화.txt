직렬화는 객체를 저장 가능한 상태(예를 들어 디스크에 파일 형태 등)
혹은 전송 가능한 상태(네트워크 상의 데이터 스트림 형태)로 변환하는 것을 뜻한다

직렬화는 응용 프로그램에서 쓰는 데이터를 네트워크를 통해 전송하거나
DB 또는 파일에 저장 가능한 형식으로 바꾸는 프로세스다.
역직렬화는 외부 소스에서 데이터를 읽고 이를 런타임 객체로 바꾸는 반대 프로세스

직렬화(serialize)란 자바 언어에서 사용되는 Object 또는 Data를 다른 컴퓨터의 자바 시스템에서도
 사용 할수 있도록 바이트 스트림(stream of bytes) 형태로 연속적인(serial) 데이터로 변환하는
포맷 변환 기술을 일컫는다.
그 반대 개념인 역직렬화는(Deserialize)는 바이트로 변환된 데이터를 원래대로 자바 시스템의
Object 또는 Data로 변환하는 기술이다.

이를 시스템적으로 살펴보면, JVM의 힙(heap) 혹은 스택(stack) 메모리에 상주하고 있는
객체 데이터를 직렬화를 통해 바이트 형태로 변환하여
데이터베이스나 파일과 같은 외부 저장소에 저장해두고,
다른 컴퓨터에서 이 파일을 가져와 역질렬화를 통해 자바 객체로 변환해서
JVM 메모리에 적재하는 것으로 보면 된다.

[ 바이트 스트림 이란? ]
스트림은 클라이언트나 서버 간에 출발지 목적지로 입출력하기 위한
데이터가 흐르는 통로를 말한다.
자바는 스트림의 기본 단위를 바이트로 두고 있기 때문에,
네트워크, 데이터베이스로 전송하기 위해 최소 단위인 바이트 스트림으로
 변환하여 처리한다.

일반적으로 Java에서의 직렬화는 객체를 Binary 형태로 변환하는 것을 뜻한다.
disk에 객체를 저장하거나 컴퓨터 네트워크 상으로 객체를 전송하고 싶다면
Binary 형태로 바꿔야지만 가능하다.
객체 그 자체는 disk나 네트워크 장비가 이해할 수 없을 것이다. 

쉽게 말해 직렬화는 객체를 저장, 전송할 수 있는 특정 포맷 상태로
바꾸는 과정이라고 할 수 있다.